{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-react-app\\\\src\\\\components\\\\ShowComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport postService from '../services/postService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ShowComponent() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPost = async () => {\n      try {\n        const response = await postService.getPost();\n        setPosts(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), posts.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: '100%'\n      },\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: post.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: post.image,\n              alt: post.title,\n              style: {\n                maxWidth: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this)]\n        }, post.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n_s(ShowComponent, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = ShowComponent;\nexport default ShowComponent;\nvar _c;\n$RefreshReg$(_c, \"ShowComponent\");","map":{"version":3,"names":["React","useState","useEffect","postService","jsxDEV","_jsxDEV","ShowComponent","_s","posts","setPosts","fetchPost","response","getPost","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","width","border","map","post","title","date","src","image","alt","maxWidth","id","_c","$RefreshReg$"],"sources":["E:/my-react-app/src/components/ShowComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport postService from '../services/postService';\r\n\r\nfunction ShowComponent() {\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchPost = async () => {\r\n            try {\r\n                const response = await postService.getPost();\r\n                setPosts(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching posts:', error);\r\n            }\r\n        };\r\n\r\n        fetchPost();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='App'>\r\n            <h1>Posts</h1>\r\n            {posts.length > 0 && (\r\n                <table style={{ width: '100%' }} border='1'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Title</th>\r\n                            <th>Date</th>\r\n                            <th>Image</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {posts.map((post) => (\r\n                            <tr key={post.id}>\r\n                                <td>{post.title}</td>\r\n                                <td>{post.date}</td>\r\n                                <td>\r\n                                    <img src={post.image} alt={post.title} style={{ maxWidth: '100px' }} />\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShowComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}