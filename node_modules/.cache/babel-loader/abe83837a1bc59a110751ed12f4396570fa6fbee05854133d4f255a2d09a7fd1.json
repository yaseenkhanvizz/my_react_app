{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-react-app\\\\src\\\\components\\\\UpdateModelComponent.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UpdateModelComponent(props) {\n  _s();\n  const [isShow, invokeModal] = useState(false);\n  const [title, setTitle] = useState(props.title);\n  const initModal = () => {\n    return invokeModal(!isShow);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      onClick: initModal,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: isShow,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        onClick: initModal,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Update Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: \"this is my react bootstrap modal! ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: initModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: initModal,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UpdateModelComponent, \"UOAs7ob4cS+CP8oupYLGA1Jbnuw=\");\n_c = UpdateModelComponent;\nexport default UpdateModelComponent;\nvar _c;\n$RefreshReg$(_c, \"UpdateModelComponent\");","map":{"version":3,"names":["useState","Modal","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateModelComponent","props","_s","isShow","invokeModal","title","setTitle","initModal","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","show","Header","closeButton","Title","Body","Footer","_c","$RefreshReg$"],"sources":["E:/my-react-app/src/components/UpdateModelComponent.jsx"],"sourcesContent":["import {useState} from 'react';\r\nimport { Modal,Button } from 'react-bootstrap';\r\n\r\nfunction UpdateModelComponent(props) {\r\n    const [isShow, invokeModal] = useState(false);\r\n\r\n    const [title,setTitle] = useState(props.title)\r\n\r\n    const initModal = () =>{\r\n        return invokeModal(!isShow);\r\n    }\r\n    return (\r\n    <>\r\n      <Button variant='success' onClick={initModal} >Edit</Button> \r\n\r\n      <Modal show={isShow} >\r\n        <Modal.Header closeButton onClick={initModal} >\r\n            <Modal.Title>Update Post</Modal.Title>\r\n        </Modal.Header>\r\n        \r\n            <Modal.Body>\r\n                this is my react bootstrap modal! ok\r\n            </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n            <Button variant='danger' onClick={initModal} >Close</Button>\r\n            <Button variant='dark' onClick={initModal} >Update</Button>\r\n        </Modal.Footer>\r\n\r\n      </Modal> \r\n    </>\r\n  )\r\n}\r\n\r\nexport default UpdateModelComponent"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,KAAK,EAACC,MAAM,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE/C,SAASC,oBAAoBA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,MAAM,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM,CAACY,KAAK,EAACC,QAAQ,CAAC,GAAGb,QAAQ,CAACQ,KAAK,CAACI,KAAK,CAAC;EAE9C,MAAME,SAAS,GAAGA,CAAA,KAAK;IACnB,OAAOH,WAAW,CAAC,CAACD,MAAM,CAAC;EAC/B,CAAC;EACD,oBACAN,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACF,MAAM;MAACc,OAAO,EAAC,SAAS;MAACC,OAAO,EAAEH,SAAU;MAAAC,QAAA,EAAE;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE5DjB,OAAA,CAACH,KAAK;MAACqB,IAAI,EAAEZ,MAAO;MAAAK,QAAA,gBAClBX,OAAA,CAACH,KAAK,CAACsB,MAAM;QAACC,WAAW;QAACP,OAAO,EAAEH,SAAU;QAAAC,QAAA,eACzCX,OAAA,CAACH,KAAK,CAACwB,KAAK;UAAAV,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAEXjB,OAAA,CAACH,KAAK,CAACyB,IAAI;QAAAX,QAAA,EAAC;MAEZ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAEjBjB,OAAA,CAACH,KAAK,CAAC0B,MAAM;QAAAZ,QAAA,gBACTX,OAAA,CAACF,MAAM;UAACc,OAAO,EAAC,QAAQ;UAACC,OAAO,EAAEH,SAAU;UAAAC,QAAA,EAAE;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC5DjB,OAAA,CAACF,MAAM;UAACc,OAAO,EAAC,MAAM;UAACC,OAAO,EAAEH,SAAU;UAAAC,QAAA,EAAE;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CAAC;EAAA,eACR,CAAC;AAEP;AAACZ,EAAA,CA7BQF,oBAAoB;AAAAqB,EAAA,GAApBrB,oBAAoB;AA+B7B,eAAeA,oBAAoB;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}